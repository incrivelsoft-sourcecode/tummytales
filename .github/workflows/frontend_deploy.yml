name: Deploy Frontend Service

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend_deploy.yml'

jobs:
  deploy:
    name: Deploy Frontend
    runs-on: ubuntu-latest

    env:
      IMAGE: frontend-service
      TAG: sha-${{ github.sha }}
      REGISTRY_HOSTNAME: docker.io
      CONTAINER_NAME: frontend-service-container

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.REGISTRY_HOSTNAME }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE }}:${{ env.TAG }} ./frontend
          docker push ${{ env.REGISTRY_HOSTNAME }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE }}:${{ env.TAG }}

      - name: Deploy on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo docker stop ${{ env.CONTAINER_NAME }} || true
            sudo docker rm ${{ env.CONTAINER_NAME }} || true
            sudo docker pull ${{ env.REGISTRY_HOSTNAME }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE }}:${{ env.TAG }}
            sudo docker run -d --pull=always --name ${{ env.CONTAINER_NAME }} -p 80:80 ${{ env.REGISTRY_HOSTNAME }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE }}:${{ env.TAG }}
